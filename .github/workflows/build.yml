name: 'Default post-commit hook check'
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches-ignore:
      # Push events to branches matching refs/heads/master
      - master
  pull_request:
  create:
jobs:
  test:
    name: 'Deploy snapshot to nexus repository'
    runs-on: 'ubuntu-20.04'
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v2
      - name: 'Set up JDK'
        uses: actions/setup-java@master
        with:
          distribution: 'corretto'
          java-version: '18' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: 'Test'
        run: mvn test --debug
        env:
          MAVEN_USERNAME: 2euEqXYt
          MAVEN_CENTRAL_TOKEN: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ''
      - name: 'Deploy'
        run: mvn deploy -DskipTests --debug
        env:
          MAVEN_USERNAME: 2euEqXYt
          MAVEN_CENTRAL_TOKEN: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ''

  quality:
    name: 'Static code analysis'
    runs-on: 'ubuntu-20.04'
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: 'Set up JDK'
        uses: actions/setup-java@master
        with:
          distribution: 'corretto'
          java-version: '18' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: 'SonarCloud Scan'
        run: mvn clean verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USERNAME: 2euEqXYt
          MAVEN_CENTRAL_TOKEN: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ''

